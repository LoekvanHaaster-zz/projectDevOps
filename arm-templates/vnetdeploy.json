{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Admin username"
      }
    },
    "SSHkey": {
      "type": "string",
      "metadata": {
        "description": "SSH key"
      }
    },
    "nsgName": {
      "type": "string",
      "defaultValue": "NSG-VM",
      "metadata": {
        "description": "Name for nsg group private subnet"
      }
    },
    "vmNamePrefix": {
      "type": "string",
      "defaultValue": "VM-",
      "metadata": {
        "description": "Prefix to use for VM names"
      }
    },
    "ubuntuOSVersion": {
      "type": "string",
      "defaultValue": "18.04-LTS",
      "metadata": {
        "description": "The Ubuntu version for the VM."
      }
    },
    "lbName": {
      "type": "string",
      "defaultValue": "LB",
      "metadata": {
        "description": "Load Balancer name"
      }
    },
    "nicNamePrefix": {
      "type": "string",
      "defaultValue": "nic",
      "metadata": {
        "description": "Network Interface name prefix"
      }
    },
    "publicIPAddressName": {
      "type": "string",
      "defaultValue": "PublicIP",
      "metadata": {
        "description": "Public IP Name"
      }
    },
    "vnetName": {
      "type": "string",
      "defaultValue": "VNET",
      "metadata": {
        "description": "VNET name"
      }
    },
    "vnetNameBuildAgent": {
      "type": "string",
      "defaultValue": "VNET-BuildAgent",
      "metadata": {
        "description": "VNET name build agent"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_B1s",
      "metadata": {
        "description": "Size of the VM"
      }
    }
  },
  "variables": {
    "storageAccountType": "Standard_LRS",
    "storageAccountName": "[concat('store', uniquestring(resourceGroup().id))]",
    "routeTableName":  "routeTable",
    "availabilitySetName": "AvSet",
    "vNet1tovNet2PeeringName": "[concat(parameters('vnetName'), '-', parameters('vNetNameBuildAgent'))]",
    "vNet2tovNet1PeeringName": "[concat(parameters('vNetNameBuildAgent'), '-', parameters('vnetName'))]",
    "addressPrefix": "10.0.0.0/16",
    "subnetName": "Subnet",
    "subnetPrefix": "10.0.0.0/24",
    "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), variables ('subnetName'))]",
    "subnetNameLB": "SubnetLB",
    "subnetPrefixLB": "10.0.1.0/24",
    "subnetRefLB": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), variables ('subnetNameLB'))]",
    "azureFirewallSubnetName": "AzureFirewallSubnet",
    "azureFirewallSubnetPrefix": "10.0.2.0/24",
    "azureFirewallSubnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), variables ('azureFirewallSubnetName'))]",
    "publicIPAddressType": "Static",
    "publicIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('publicIPAddressName'))]",
    "numberOfInstances": 3,
    "firewallName":  "firewall",
    "lbID": "[resourceId('Microsoft.Network/loadBalancers',parameters('lbName'))]",
    "frontEndIPConfigID": "[concat(variables('lbID'),'/frontendIPConfigurations/LoadBalancerFrontEnd')]",
    "lbPoolID": "[concat(variables('lbID'),'/backendAddressPools/BackendPool1')]",
    "lbProbeID": "[concat(variables('lbID'),'/probes/tcpProbe')]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "linuxConfiguration": {
      "disablePasswordAuthentication": true,
      "ssh": {
        "publicKeys": [
          {
            "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
            "keyData": "[parameters('SSHkey')]"
          }
        ]
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[resourceGroup().location]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "type": "Microsoft.Network/routeTables",
      "name": "[variables('routeTableName')]",
      "apiVersion": "2019-04-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "disableBgpRoutePropagation": false,
        "routes": [
          {
            "name": "AzfwDefaultRoute",
            "properties": {
              "addressPrefix": "0.0.0.0/0",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[concat(substring(variables('azureFirewallSubnetPrefix'), 0, 7), '4')]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('availabilitySetName')]",
      "apiVersion": "2016-04-30-preview",
      "location": "[resourceGroup().location]",
      "properties": {
        "platformFaultDomainCount": 2,
        "platformUpdateDomainCount": 2,
        "managed": true
      }
    },
    {
      "apiVersion": "2018-10-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('publicIPAddressName')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]"
      }
    },

    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('nsgName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "HTTP",
            "properties": {
              "description": "Allows HTTP traffic",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "Visualizer",
            "properties": {
              "description": "Allows HTTP traffic",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "5000",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 110,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2017-10-01",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[parameters('vnetName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('nsgName'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
              }
            }
          },
          {
            "name": "[variables('subnetNameLB')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefixLB')]"
            }
          },
          {
            "name": "[variables('azureFirewallSubnetName')]",
            "properties": {
              "addressPrefix": "[variables('azureFirewallSubnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-06-01",
      "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
      "name": "[concat(parameters('vNetNameBuildAgent'), '/', variables('vNet2tovNet1PeeringName'))]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', parameters('vNetName'))]"
      ],
      "properties": {
        "allowVirtualNetworkAccess": true,
        "allowForwardedTraffic": false,
        "allowGatewayTransit": false,
        "useRemoteGateways": false,
        "remoteVirtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vNetName'))]"
        }
      }
    },
    {
      "apiVersion": "2016-06-01",
      "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
      "name": "[concat(parameters('vNetName'), '/', variables('vNet1tovNet2PeeringName'))]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', parameters('vNetName'))]"
      ],
      "properties": {
        "allowVirtualNetworkAccess": true,
        "allowForwardedTraffic": false,
        "allowGatewayTransit": false,
        "useRemoteGateways": false,
        "remoteVirtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetNameBuildAgent'))]"
        }
      }
    },
    {
      "apiVersion": "2018-10-01",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('nicNamePrefix'), copyindex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "nicLoop",
        "count": "[variables('numberOfInstances')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', parameters('vnetName'))]",
        "[concat('Microsoft.Network/loadBalancers/', parameters('lbName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(variables('lbID'), '/backendAddressPools/BackendPool1')]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2018-10-01",
      "name": "[parameters('lbName')]",
      "type": "Microsoft.Network/loadBalancers",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', parameters('vNetName'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "LoadBalancerFrontEnd",
            "properties": {
              "subnet": {
                "id": "[variables('subnetRefLB')]"
              },
              "privateIPAddress": "10.0.1.6",
              "privateIPAllocationMethod": "Static"
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "BackendPool1"
          }
        ],
        "loadBalancingRules": [
          {
            "name": "LBRule",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('frontEndIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[variables('lbPoolID')]"
              },
              "protocol": "Tcp",
              "frontendPort": 80,
              "backendPort": 80,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 5,
              "probe": {
                "id": "[variables('lbProbeID')]"
              }
            }
          },
          {
            "name": "LBRule2",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('frontEndIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[variables('lbPoolID')]"
              },
              "protocol": "Tcp",
              "frontendPort": 5000,
              "backendPort": 5000,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 5,
              "probe": {
                "id": "[variables('lbProbeID')]"
              }
            }
          }
        ],
        "probes": [
          {
            "name": "tcpProbe",
            "properties": {
              "protocol": "Tcp",
              "port": 80,
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            }
          },
          {
            "name": "tcpProbe2",
            "properties": {
              "protocol": "Tcp",
              "port": 5000,
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2018-10-01",
      "name": "[concat(parameters('vmNamePrefix'), copyindex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "virtualMachineLoop",
        "count": "[variables('numberOfInstances')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', parameters('nicNamePrefix'), copyindex())]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySetName'))]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('availabilitySetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[concat(parameters('vmNamePrefix'), copyindex())]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('SSHkey')]",
          "linuxConfiguration": "[variables('linuxConfiguration')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('ubuntuOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "diskSizeGB": 1023,
              "lun": 0,
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('nicNamePrefix'), copyindex()))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), '2016-01-01').primaryEndpoints.blob)]"
          }
        }
      }
    },
    {
      "apiVersion": "2019-04-01",
      "type": "Microsoft.Network/azureFirewalls",
      "name": "[variables('firewallName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]",
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddressName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "azureFirewallIpConfigurations",
            "properties": {
              "subnet": {
                "id": "[variables('azureFirewallSubnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddressName'))]"
              }
            }
          }
        ],
        "natRuleCollections": [
          {
            "name": "natRc1",
            "properties": {
              "priority": "100",
              "action": {
                "type": "DNAT"
              },
              "rules": [
                {
                  "name": "natRule1",
                  "sourceAddresses": [
                    "*"
                  ],
                  "destinationAddresses": [
                    "[reference(variables('publicIPAddressID')).IpAddress]"
                  ],
                  "destinationPorts": [
                    "80"
                  ],
                  "protocols": [
                    "TCP"
                  ],
                  "translatedAddress": "10.0.1.6",
                  "translatedPort": "80"
                }
              ]
            }
          },
          {
            "name": "natRc2",
            "properties": {
              "priority": "110",
              "action": {
                "type": "DNAT"
              },
              "rules": [
                {
                  "name": "natRule1",
                  "sourceAddresses": [
                    "*"
                  ],
                  "destinationAddresses": [
                    "[reference(variables('publicIPAddressID')).IpAddress]"
                  ],
                  "destinationPorts": [
                    "5000"
                  ],
                  "protocols": [
                    "TCP"
                  ],
                  "translatedAddress": "10.0.1.6",
                  "translatedPort": "5000"
                }
              ]
            }
          }
        ]
      }
    }
  ],
  "outputs": {
    "privateip0": {
      "value": "[reference(resourceId('Microsoft.Network/networkInterfaces', concat(parameters('nicNamePrefix'), '0'))).ipConfigurations[0].properties.privateIPAddress]",
      "type": "string"
    },
    "privateip1": {
      "value": "[reference(resourceId('Microsoft.Network/networkInterfaces', concat(parameters('nicNamePrefix'), '1'))).ipConfigurations[0].properties.privateIPAddress]",
      "type": "string"
    },
    "privateip2": {
      "value": "[reference(resourceId('Microsoft.Network/networkInterfaces', concat(parameters('nicNamePrefix'), '2'))).ipConfigurations[0].properties.privateIPAddress]",
      "type": "string"
    }
  }
}
